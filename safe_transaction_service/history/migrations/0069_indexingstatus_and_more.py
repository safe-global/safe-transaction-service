# Generated by Django 4.1.3 on 2022-12-07 13:07
from django.conf import settings
from django.db import migrations, models
from django.db.models import Min

from ..models import IndexingStatusType


def create_indexing_status(apps, schema_editor):
    SafeContract = apps.get_model("history", "SafeContract")
    IndexingStatus = apps.get_model("history", "IndexingStatus")

    erc20_block_number = SafeContract.objects.aggregate(
        min_erc20_block_number=Min("erc20_block_number")
    )["min_erc20_block_number"]

    if erc20_block_number:
        block_number = erc20_block_number
    else:
        SafeMasterCopy = apps.get_model("history", "SafeMasterCopy")
        queryset = (
            SafeMasterCopy.objects.filter(l2=True)
            if settings.ETH_L2_NETWORK
            else SafeMasterCopy.objects.all()
        )
        min_master_copies_block_number = queryset.aggregate(
            min_master_copies_block_number=Min("initial_block_number")
        )["min_master_copies_block_number"]
        block_number = (
            min_master_copies_block_number if min_master_copies_block_number else 0
        )

    IndexingStatus.objects.update_or_create(
        indexing_type=IndexingStatusType.ERC20_721_EVENTS.value,
        defaults={"block_number": block_number},
    )


def remove_indexing_status(apps, schema_editor):
    SafeContract = apps.get_model("history", "SafeContract")
    IndexingStatus = apps.get_model("history", "IndexingStatus")

    try:
        block_number = IndexingStatus.objects.get(
            indexing_type=IndexingStatusType.ERC20_721_EVENTS.value
        ).block_number
    except IndexingStatus.DoesNotExist:
        block_number = 0
    SafeContract.objects.update(erc20_block_number=block_number)


class Migration(migrations.Migration):

    dependencies = [
        ("history", "0068_alter_multisigtransaction_origin"),
    ]

    operations = [
        migrations.CreateModel(
            name="IndexingStatus",
            fields=[
                (
                    "indexing_type",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "ERC20_721_EVENTS")],
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("block_number", models.PositiveIntegerField(db_index=True)),
            ],
        ),
        migrations.RunPython(
            create_indexing_status, reverse_code=remove_indexing_status
        ),
        migrations.RemoveField(
            model_name="safecontract",
            name="erc20_block_number",
        ),
    ]
